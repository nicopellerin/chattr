{"version":3,"file":"workbox-8666a044.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/workbox-core/_private/DBWrapper.js","node_modules/workbox-core/_private/deleteDatabase.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-cacheable-response/_version.js","node_modules/workbox-cacheable-response/CacheableResponse.js","node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle (this is usually\n     *     from a fetch event, but it does not have to be).\n     * @param {FetchEvent} [options.event] The event that triggered the request,\n     *     if applicable.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const { params, route } = this.findMatchingRoute({ url, request, event });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        if (!handler && this._defaultHandler) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler.`);\n            }\n            handler = this._defaultHandler;\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} [options.event] The corresponding event (unless N/A).\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(url, URL, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.url',\n            });\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.request',\n            });\n        }\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, request, event });\n            if (matchResult) {\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setDefaultHandler(handler) {\n        this._defaultHandler = normalizeHandler(handler);\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n                // TODO: Assert is positive\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n                // TODO: Assert is positive\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in the Workbox APIs to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the used Cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheFirst',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await this._getFromNetwork(request, event);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * Handles the network and cache part of CacheFirst.\n     *\n     * @param {Request} request\n     * @param {Event} [event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork(request, event) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        // Keep the service worker while we put the request to the cache\n        const responseClone = response.clone();\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: responseClone,\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Force a service worker to activate immediately, instead of\n * [waiting](https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting)\n * for existing clients to close.\n *\n * @memberof module:workbox-core\n */\nfunction skipWaiting() {\n    // We need to explicitly call `self.skipWaiting()` here because we're\n    // shadowing `skipWaiting` with this local function.\n    self.addEventListener('install', () => self.skipWaiting());\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof module:workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.1.3'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName;\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof module:workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","methodName","normalizedRangeHeader","size","start","end","url","status","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","RegExpRoute","regExp","RegExp","result","exec","href","origin","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","params","route","findMatchingRoute","debugMessages","push","_defaultHandler","forEach","msg","err","reject","_catchHandler","catch","get","matchResult","length","undefined","setDefaultHandler","setCatchHandler","registerRoute","has","set","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","dontWaitFor","promise","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","open","resolve","openRequestTimedOut","setTimeout","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","bind","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","entries","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","mode","methods","IDBObjectStore","deleteDatabase","onblocked","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","id","_getId","put","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","delete","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_timestampModel","Date","now","urlsExpired","cache","caches","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","headers","dateHeader","parsedDate","headerTime","getTime","isNaN","CacheableResponse","statuses","_statuses","_headers","isResponseCacheable","response","Response","cacheable","some","headerName","logFriendlyHeaders","CacheableResponsePlugin","cacheWillUpdate","_cacheableResponse","executeQuotaErrorCallbacks","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","cacheKeyWillBeUsedPlugins","effectiveRequest","call","_isResponseSafeToCache","responseToCache","pluginsUsed","pluginMethod","matchWrapper","matchOptions","putWrapper","updatePlugins","oldResponse","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","strategyStart","strategyName","printFinalResponse","CacheFirst","options","_plugins","_fetchOptions","_matchOptions","logs","_getFromNetwork","responseClone","cachePutPromise","skipWaiting","clientsClaim","clients","claim","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","urlsToWarnAbout","cacheMode","integrity","warningMessage","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","precacheRequests","_addURLToCache","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","credentials","cacheWillUpdatePlugin","isValidResponse","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","urlsToCacheKeys","possibleURL","possibleCacheKey","precachedURL","listenerAdded","addRoute","precachePlugins","newPlugins","installListener","activateListener","precacheAndRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","cachesDeleted"],"mappings":"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"}